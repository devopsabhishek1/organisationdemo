
  
on:
  push:
    branches: 
      - master
name: Push to ECR
jobs:
  PushToECR:
    name: pushtoECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Congigure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1
      - name: login ECR
        id: login-ECR
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build,tag,Push,Image
        id: build-image
        env:
          ECR_Registry: ${{  secrets. }}
          ECR_Repository: devops-machineinfo-actions-prod-deepak

          Image_Tag: ${{ github.sha }}
          
        run: |
          docker build -t $ECR_Registry/devops-machineinfo-actions-prod-deepak:$Image_Tag .
          docker push $ECR_Registry/devops-machineinfo-actions-prod-deepak:$Image_Tag
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
         task-definition: task-def.json
         container-name: machineinfo-actions-demo
         image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
         task-definition: ${{ steps.task-def.outputs.task-definition }}
         service: demo
         cluster: Demo-action
         wait-for-service-stability: true
